
/* Variables générales*/
load "gmsh";
mesh th=gmshload("../../maillage/mesh_laplace.msh");
plot(th, wait= true, cmm = "Mon superbe maillage");

real dt=1; //
real coeffd=0.1;
int Itf=50;
fespace Vh(th,P1);
Vh uh,vh,uold;

//Solve

int it=0;
uold=10;
macro Grad(u)[dx(u),dy(u)]//

problem Diffusion (uh , vh, solver=LU) = 
int2d(th) (+ 0.5*dt*coeffd*Grad(uh)'*Grad(vh))
+ int2d(th)(uh*vh)
- int2d(th) (uold*vh)
+ int2d(th)( 0.5*dt*coeffd*Grad(uold)'*Grad(vh))
+on(2,uh=10)
+on(3,uh=0);

//Time loop

for ( it = 0; it <Itf ; it++ ) 
{
    Diffusion;
    uold = uh;

 // cout<< "it= " << it << endl;
  
/*
	if (it==Itf-1){
	plot(th,uh,wait=1,fill=true);
	}
*/
}
for (int j=0;j<uold[].n ; j++)
  {
  	cout << "uold(" << j <<")= "<< uold[][j] << endl;
  }


//vecteur B
//uold=0;
varf pbDiffusion (uh , vh, solver=LU) = 
int2d(th) (+ 0.5*dt*coeffd*Grad(uh)'*Grad(vh))
+ int2d(th,qft=qf1pTlump)(uh*vh)
- int2d(th,qft=qf1pTlump) (uold*vh)
+ int2d(th)( 0.5*dt*coeffd*Grad(uold)'*Grad(vh));
//+on(2,uh=10)
//+on(3,uh=0);

Vh B;
B[] = pbDiffusion (0, Vh);

{ 
  //ofstream fout("B.txt") ;
  for (int j=0;j<B[].n ; j++)
  {
  	//fout << B[][j] << endl ;
	cout << "b(" << j <<")= " <<- B[][j] << endl ;
  }
}
//*/
